<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://shaman.liv.ac.uk/" xmlns:tns="http://shaman.liv.ac.uk/" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="IOException" type="tns:IOException"/>

  <xs:element name="MalformedURLException" type="tns:MalformedURLException"/>

  <xs:element name="extractFontInformation" type="tns:extractFontInformation"/>

  <xs:element name="extractFontInformationFromData" type="tns:extractFontInformationFromData"/>

  <xs:element name="extractFontInformationFromDataResponse" type="tns:extractFontInformationFromDataResponse"/>

  <xs:element name="extractFontInformationResponse" type="tns:extractFontInformationResponse"/>

  <xs:element name="extractXmlText" type="tns:extractXmlText"/>

  <xs:element name="extractXmlTextFromData" type="tns:extractXmlTextFromData"/>

  <xs:element name="extractXmlTextFromDataResponse" type="tns:extractXmlTextFromDataResponse"/>

  <xs:element name="extractXmlTextResponse" type="tns:extractXmlTextResponse"/>

  <xs:element name="generateSVGThumbnail" type="tns:generateSVGThumbnail"/>

  <xs:element name="generateSVGThumbnailFromData" type="tns:generateSVGThumbnailFromData"/>

  <xs:element name="generateSVGThumbnailFromDataResponse" type="tns:generateSVGThumbnailFromDataResponse"/>

  <xs:element name="generateSVGThumbnailResponse" type="tns:generateSVGThumbnailResponse"/>

  <xs:element name="generateThumbnail" type="tns:generateThumbnail"/>

  <xs:element name="generateThumbnailFromData" type="tns:generateThumbnailFromData"/>

  <xs:element name="generateThumbnailFromDataResponse" type="tns:generateThumbnailFromDataResponse"/>

  <xs:element name="generateThumbnailResponse" type="tns:generateThumbnailResponse"/>

  <xs:element name="getSupportedMimeTypes" type="tns:getSupportedMimeTypes"/>

  <xs:element name="getSupportedMimeTypesResponse" type="tns:getSupportedMimeTypesResponse"/>

  <xs:element name="getSupportedOutputType" type="tns:getSupportedOutputType"/>

  <xs:element name="getSupportedOutputTypeResponse" type="tns:getSupportedOutputTypeResponse"/>

  <xs:element name="resolve" type="tns:resolve"/>

  <xs:element name="resolveResponse" type="tns:resolveResponse"/>

  <xs:complexType name="extractXmlText">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractXmlTextResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MalformedURLException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="IOException">
    <xs:sequence>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractFontInformation">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractFontInformationResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:fontInformation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fontInformation">
    <xs:sequence>
      <xs:element name="fontName" type="xs:string" minOccurs="0"/>
      <xs:element name="charset" type="xs:string" minOccurs="0"/>
      <xs:element name="fontType" type="xs:string" minOccurs="0"/>
      <xs:element name="fontFlags" type="xs:int"/>
      <xs:element name="isEmbedded" type="xs:boolean"/>
      <xs:element name="isSubset" type="xs:boolean"/>
      <xs:element name="isToUnicode" type="xs:boolean"/>
      <xs:element name="pitchAndFamily" type="xs:string" minOccurs="0"/>
      <xs:element name="fontFamily" type="xs:string" minOccurs="0"/>
      <xs:element name="fontStretch" type="xs:string" minOccurs="0"/>
      <xs:element name="fontWeight" type="xs:float"/>
      <xs:element name="numGlyph" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateThumbnail">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
      <xs:element name="arg5" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateThumbnailResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSVGThumbnailFromData">
    <xs:sequence>
      <xs:element name="arg0" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSVGThumbnailFromDataResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateThumbnailFromData">
    <xs:sequence>
      <xs:element name="arg0" type="xs:base64Binary" nillable="true" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:string" minOccurs="0"/>
      <xs:element name="arg4" type="xs:string" minOccurs="0"/>
      <xs:element name="arg5" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateThumbnailFromDataResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSVGThumbnail">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="generateSVGThumbnailResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractFontInformationFromData">
    <xs:sequence>
      <xs:element name="arg0" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractFontInformationFromDataResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:fontInformation" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="resolve">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="resolveResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getSupportedOutputType">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getSupportedOutputTypeResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getSupportedMimeTypes">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="getSupportedMimeTypesResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractXmlTextFromData">
    <xs:sequence>
      <xs:element name="arg0" type="xs:base64Binary" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="extractXmlTextFromDataResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

