/*******************************************************************************
 *
 *  * Copyright (C) 2007, 2010 - The University of Liverpool
 *  * This program is free software; you can redistribute it and/or modify it under the terms
 *  * of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License,
 *  * or (at your option) any later version.
 *  * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 *  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *  * You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  *
 *  * Author: Fabio Corubolo
 *  * Email: corubolo@gmail.com
 * 
 *******************************************************************************/


package uk.ac.liv.c3connector.ui;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.KeyPair;

import javax.swing.JDialog;

import uk.ac.liv.c3connector.DistributedPersonalAnnos;
import uk.ac.liv.c3connector.crypto.PKCS5SimpleKeyStore;

/**
 * 
 * This class represents the visual dialog used to create the keypair.
 * 
 * @author fabio
 */
public class GenerateKeyDialog extends JDialog {


	/**
	 * 
	 */
	private static final long serialVersionUID = 7814208323488468409L;


	/** Creates new form createKey */
	public GenerateKeyDialog(Dialog parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}

	public GenerateKeyDialog(Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents() {
		jLabel1 = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		jComboBox1 = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jComboBox2 = new javax.swing.JComboBox();
		jLabel6 = new javax.swing.JLabel();
		jPasswordField1 = new javax.swing.JPasswordField();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jLabel4 = new javax.swing.JLabel();
		jLabel14 = new javax.swing.JLabel();
		jTextField8 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();

		addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosed(WindowEvent e) {
				close();
			}


		});
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Key generation");
		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		setLocationByPlatform(true);
		jLabel1.setText("Create a private / public key");

		jPanel1.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Key settings"));
		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"512", "1024", "2048" }));

		jLabel2.setText("Key size:");

		jLabel3.setText("Key type:");

		jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"DSA", "RSA" }));

		jLabel6.setText("Password");
		// jComboBox1.setEditable(false);

		// jPasswordField1.setText("");
		jPasswordField1.setColumns(10);
		org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
						jPanel1Layout.createSequentialGroup().addContainerGap().add(
								jLabel2).addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED).add(
												jComboBox1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(17,
														17, 17).add(jLabel3).addPreferredGap(
																org.jdesktop.layout.LayoutStyle.RELATED).add(
																		jComboBox2,
																		org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																		org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																		org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED).add(
																						jLabel6).addPreferredGap(
																								org.jdesktop.layout.LayoutStyle.RELATED,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE).add(jPasswordField1,
																										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.addContainerGap()));
		jPanel1Layout
		.setVerticalGroup(jPanel1Layout
				.createParallelGroup(
						org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel1Layout
								.createSequentialGroup()
								.addContainerGap()
								.add(
										jPanel1Layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.BASELINE)
												.add(jLabel2)
												.add(jLabel3)
												.add(
														jComboBox2,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(jLabel6)
														.add(
																jPasswordField1,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																.add(
																		jComboBox1,
																		org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																		org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																		org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																		.addContainerGap(14, Short.MAX_VALUE)));

		jTextArea1.setColumns(20);
		jTextArea1.setFont(new java.awt.Font("Dialog", 0, 10));
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		jLabel4.setText("Public key:");

		jLabel14.setText("path to private key file");

		jButton1.setText("Generate now");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if (jPasswordField1.getPassword().length == 0) {
					System.out.println("password cannot be empty!");
					//new JDialog()
					return;
				}
				generateKeys(evt);
			}
		});

		jButton2.setText("Save public key as...");

		jButton3.setText("done");

		jButton3.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				close();
			}

		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
		.setHorizontalGroup(layout
				.createParallelGroup(
						org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
								.createSequentialGroup()
								.addContainerGap()
								.add(
										layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
												.add(
														layout
														.createSequentialGroup()
														.add(
																jTextField8,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																479,
																Short.MAX_VALUE)
																.addContainerGap())
																.add(
																		layout
																		.createSequentialGroup()
																		.add(
																				layout
																				.createParallelGroup(
																						org.jdesktop.layout.GroupLayout.LEADING)
																						.add(
																								org.jdesktop.layout.GroupLayout.TRAILING,
																								jScrollPane1,
																								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																								479,
																								Short.MAX_VALUE)
																								.add(
																										jPanel1,
																										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																										Short.MAX_VALUE)
																										.add(
																												jLabel1)
																												.add(
																														jLabel4)
																														.add(
																																jButton1))
																																.addContainerGap())
																																.add(jLabel14)
																																.add(
																																		layout
																																		.createSequentialGroup()
																																		.add(
																																				jButton2)
																																				.addPreferredGap(
																																						org.jdesktop.layout.LayoutStyle.RELATED,
																																						257,
																																						Short.MAX_VALUE)
																																						.add(
																																								jButton3)
																																								.addContainerGap()))));
		layout
		.setVerticalGroup(layout
				.createParallelGroup(
						org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
								.createSequentialGroup()
								.addContainerGap()
								.add(jLabel1)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jPanel1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(
														org.jdesktop.layout.LayoutStyle.RELATED)
														.add(jButton1)
														.addPreferredGap(
																org.jdesktop.layout.LayoutStyle.RELATED)
																.add(jLabel4)
																.addPreferredGap(
																		org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				jScrollPane1,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																				130,
																				org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																				.addPreferredGap(
																						org.jdesktop.layout.LayoutStyle.RELATED)
																						.add(jLabel14)
																						.addPreferredGap(
																								org.jdesktop.layout.LayoutStyle.RELATED)
																								.add(
																										jTextField8,
																										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												org.jdesktop.layout.LayoutStyle.RELATED)
																												.add(
																														layout
																														.createParallelGroup(
																																org.jdesktop.layout.GroupLayout.BASELINE)
																																.add(jButton2).add(
																																		jButton3))
																																		.addContainerGap(13, Short.MAX_VALUE)));
		pack();

	}// </editor-fold>//GEN-END:initComponents





	/**
	 * 
	 */
	protected void close() {
		setModal(false);
		setVisible(false);
		//this.
		dispose();
		//TODO

	}

	void generateKeys(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_generateKeys
		doGenKey();

	}

	/**
	 * 
	 */
	private void doGenKey() {
		try {
			int keysize = Integer.parseInt((String) jComboBox1
					.getSelectedItem());
			char[] lp = jPasswordField1.getPassword();
			String keyType = (String) jComboBox2.getSelectedItem();
			PKCS5SimpleKeyStore ks = new PKCS5SimpleKeyStore(DistributedPersonalAnnos.defksfile);
			KeyPair kp = ks.generateKeys(keysize, lp, keyType);
			String s = PKCS5SimpleKeyStore.getAsString(kp.getPublic());
			jTextArea1.setText(s);
			jTextArea1.selectAll();
			StringSelection stringSelection = new StringSelection(s);
			Clipboard clipboard = Toolkit.getDefaultToolkit()
			.getSystemClipboard();
			clipboard.setContents(stringSelection, null);
			DistributedPersonalAnnos.ks = ks;

		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}





	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;

	private javax.swing.JButton jButton2;

	private javax.swing.JButton jButton3;

	private javax.swing.JComboBox jComboBox1;

	private javax.swing.JComboBox jComboBox2;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JLabel jLabel14;

	private javax.swing.JLabel jLabel2;

	private javax.swing.JLabel jLabel3;

	private javax.swing.JLabel jLabel4;

	private javax.swing.JLabel jLabel6;

	private javax.swing.JPanel jPanel1;

	javax.swing.JPasswordField jPasswordField1;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JTextArea jTextArea1;

	private javax.swing.JTextField jTextField8;
	// End of variables declaration//GEN-END:variables

}


